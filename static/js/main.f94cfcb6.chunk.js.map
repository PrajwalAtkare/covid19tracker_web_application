{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f94cfcb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1LZ8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1SIRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2oeF1\",\"card\":\"Cards_card__omZBs\",\"infected\":\"Cards_infected__2VDpy\",\"recovered\":\"Cards_recovered__2eDeo\",\"deaths\":\"Cards_deaths__1zEsi\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\nconst Cards =({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n  if(!confirmed){\r\n        return'Loading....';\r\n  }\r\n    return (\r\n    <div className={styles.container}>\r\n    <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                <Typography variant=\"h5\">\r\n                    <CountUp start={0}\r\n                        end={confirmed.value} \r\n                        duration={2.5} \r\n                        separator=\",\"\r\n                    />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                <Typography variant=\"h5\">\r\n                <CountUp start={0}\r\n                        end={recovered.value} \r\n                        duration={2.5} \r\n                        separator=\",\"\r\n                    />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of arecoveries from covid-19</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        <Grid item component ={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                <Typography variant=\"h5\">\r\n                <CountUp start={0}\r\n                        end={deaths.value} \r\n                        duration={2.5} \r\n                        separator=\",\"\r\n                    />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of deaths caused by covid-19</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    </Grid>\r\n    </div>\r\n    \r\n);\r\n}\r\n\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl =url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n   try{\r\n    const {data:{confirmed,recovered,deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n   \r\n    return {confirmed,recovered,deaths,lastUpdate};\r\n\r\n   } catch(error){\r\n    console.log(error);\r\n   }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const {data} =await axios.get(`${url}/daily`);\r\n\r\n        return data.map(({ confirmed, deaths, reportDate: date }) => \r\n        ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n        /*\r\n        const modifiedData = data.map((dailyData)=>\r\n        ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date :dailyData.reportDate,\r\n        }));*/\r\n        //return modifiedData;\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async ()=>{\r\n\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n      return countries.map((country)=> country.name);\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport{Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) =>{\r\n    const [dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async ()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n     \r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n        ?(\r\n        <Line \r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true,\r\n                    \r\n                },\r\n                {\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />):null\r\n    );\r\n\r\n    console.log(confirmed,recovered,deaths);\r\n    const barChart =(\r\n       confirmed\r\n        ?(\r\n            <Bar \r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label:'People',\r\n                    backgroundColor: [\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)',\r\n                    ],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true, text:`Current state in ${country}`}\r\n\r\n            }}\r\n            />\r\n        ):null\r\n    )\r\n    return(\r\n      <div className={styles.container}>\r\n        {country ? barChart : lineChart}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport { NativeSelect,FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker =({handleCountryChange})=>{\r\nconst [fetchedCountries, setFetchedCountries]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n\r\n    },[setFetchedCountries]);\r\n\r\nreturn (\r\n    <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n            <option value =\"\">Global</option>\r\n            {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n    </FormControl>\r\n)\r\n}\r\n\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaImage from './images/image.png';\r\nclass App extends React.Component {\r\n   \r\n   state ={\r\n    data: {},\r\n    country:'',\r\n   }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country)=>{\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({data:fetchedData, country:country});\r\n\r\n\r\n        //set the state\r\n    }\r\n    render() {\r\n\r\n        const {data, country} = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n               <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country} />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Jiiq\",\"image\":\"App_image__2ykPq\"};"],"sourceRoot":""}